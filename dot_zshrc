# Requirements
#  TODO: Automate install
# - bat
# - fzf
# - ripgrep
# - nvm
# - pandoc
# - grc
# - less
# - zoxide
# - eza

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Add Powerlevel10k
zinit ice depth=1; zinit light romkatv/powerlevel10k

# Load and configure completions
# Add Homebrew-managed zsh site-functions on your FPATH before initialising
#  zsh’s completion facility. 
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi
#  NOTE: LS_COLORS is needed for proper highlighting of completions.
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43';
export LS_COLORS
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zinit light zsh-users/zsh-completions
autoload -Uz compinit && compinit
zinit cdreplay -q

# Load and configure fzf-tab
#  NOTE: fzf-tab needs to be loaded after compinit, but before plugins which
#  will wrap widgets, such as zsh-autosuggestions or fast-syntax-highlighting.
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'eza -1 --color=always $realpath'
# zstyle ':fzf-tab:complete:bat:*' fzf-preview 'bat {}'
# Disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# Set descriptions format to enable group support
#  NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will
#  ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# Switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'
zinit light Aloxaf/fzf-tab

# Load and configure fzf-tab-source
zinit light Freed-Wu/fzf-tab-source
zstyle ':fzf-tab:sources' config-directory /a/directory

# Load and configure nvm plugin
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
zinit light lukechilds/zsh-nvm

# Load and configure eza snippets
zstyle ':omz:plugins:eza' 'dirs-first' yes
zstyle ':omz:plugins:eza' 'icons' yes
zinit snippet OMZP::eza

# Load and configure other plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-autosuggestions

# Load and configure other snippets
zinit snippet OMZP::git

# Keybindings
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory 
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Aliases
alias e=$EDITOR
alias c='clear'
alias lt='eza --tree --icons=always'

# Shell integrations
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
